<!--(if type=="FRONTEND")-->
include "common.conf"

appName="$!APP_NAME!$"
application.router=prod.Routes

application.global=uk.gov.hmrc.$!APP_PACKAGE_NAME!$.FrontendGlobal

play.filters.headers.contentSecurityPolicy= "default-src 'self' 'unsafe-inline' localhost:9000 localhost:9032 www.google-analytics.com data:"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
    <!--(if MONGO)-->
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"
    <!--(end)-->

# Global request handler
# ~~~~
# Set to the object handler for migrated 2.3 services
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="$!SECRET_KEY!$"

microservice {
    metrics {
        graphite {
            host = localhost
            port = 2003
            prefix = play.${appName}.
            enabled = true
        }
    }

    services {

    }
}

metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}

auditing {
  enabled=true
  traceRequests=true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token=N/A
  host=auto
}

assets {
  version = "2.149.0"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

contact-frontend {
  host = "http://localhost:9250"
}


<!--(end)-->

<!--(if type=="MICROSERVICE" or type=="STUB")-->
# This is the main configuration file for the application.
# ~~~~~

appName=$!APP_NAME!$

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
    <!--(if MONGO)-->
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"
    <!--(end)-->

# Global request handler
# ~~~~
# Set to the object handler for migrated 2.3 services
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="$!SECRET_KEY!$"

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
    <!--(if type=="STUB")-->
application.global=uk.gov.hmrc.$!APP_PACKAGE_NAME!$.StubGlobal
    <!--(else)-->
application.global=uk.gov.hmrc.$!APP_PACKAGE_NAME!$.MicroserviceGlobal
    <!--(end)-->

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router=prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
    # 300 is the default, you may need to change this according to your needs
    confidenceLevel = 300

    com.kenshoo.play.metrics.MetricsController = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
    }

  uk.gov.hmrc.$!APP_PACKAGE_NAME!$.controllers.MicroserviceHelloWorld = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
    }

}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}


# Microservice specific config

auditing {
    enabled=true
    traceRequests=true
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}


    <!--(if MONGO)-->
mongodb {
    uri = "mongodb://localhost:27017/$!APP_NAME!$"
}
    <!--(end)-->


microservice {
    metrics {
        graphite {
            host = graphite
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {
    <!--(if type=="MICROSERVICE")-->

        auth {
            host=localhost
            port=8500
        }

    <!--(end)-->
    }
}


<!--(end)-->
